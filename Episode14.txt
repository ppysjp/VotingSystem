studyvideo

In this episode we are going to look at Views and then  Razor pages.
Basically he opens by creating a Index.cshtml page. The 'cs' within the html page stands for 
C Sharp html.	He puts this within the VotingSystemUI project under it's own folder which is 
called views. 

gacp "Create first cshtml page which is the index page"

studyvideo

So now we are creating the first HttpGet request which will retrieve the Index page we have 
created. Even though you may place the index page in the correct place you need to set its
BuildAction property to 'Content' other wise when you make the request for the page it will
not be found.  

gacp "Making index page work"

studyvideo

He then tried to implement the next HttpGet request for the about page, but he makes the 
View method return the Index page. However he runs into an error when doing this when he
tries to get the page when running the website. When we type this URL in 
https://localhost:44341/home we get the folowing error which says that the request 
mached multiple endpoints.

gacp "Multiple endpoints error"

studyvideo

So he then goes on to explain one method for fixing this multiple endponts error. This is to 
add to the route attribute [action]. This will then allow the client to know which HttpGet
to call when the Home website is called. This has the unintended consequence of extending 
the URL however so the new URLS with this change would be 

https://localhost:44341/home/Index

or

https://localhost:44341/home/About

The problem with this is that it has the unintended consequence of meaning that the HttpPost
will only be called with the following URL 

https://localhost:44341/home/Create

which is not what we want.

gacp "Fix Multiple endpoints by adding actions to the route path"

studyvideo

So he the demonstrates how you can pass a object to the View() method, he clicks on F12
to demonstrate this. The object that is being passed is basically a model. 
Additional chagnes will be required in the cshtml so that the object is evaluated correctly. 

gacp "How to pass a model into the View() method part1"

studyvideo

He then explains how you would access the Info model from the cshtml page. Basically within
the cshtml file you have to use the @model tag and then you have to dig down into the class
to find the model type. This then gives you the power to use the model type within the 
cshtml file.

